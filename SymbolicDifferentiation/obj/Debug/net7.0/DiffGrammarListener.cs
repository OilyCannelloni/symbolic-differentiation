//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\barte\RiderProjects\SymbolicDifferentiation\SymbolicDifferentiation\DiffGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace SymbolicDifferentiation {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DiffGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IDiffGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ConstOp</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstOp([NotNull] DiffGrammarParser.ConstOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstOp</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstOp([NotNull] DiffGrammarParser.ConstOpContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConstAtom</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstAtom([NotNull] DiffGrammarParser.ConstAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstAtom</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstAtom([NotNull] DiffGrammarParser.ConstAtomContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ConstParen</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstParen([NotNull] DiffGrammarParser.ConstParenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ConstParen</c>
	/// labeled alternative in <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstParen([NotNull] DiffGrammarParser.ConstParenContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ExprSum</c>
	/// labeled alternative in <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprSum([NotNull] DiffGrammarParser.ExprSumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprSum</c>
	/// labeled alternative in <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprSum([NotNull] DiffGrammarParser.ExprSumContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ExprTerm</c>
	/// labeled alternative in <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprTerm([NotNull] DiffGrammarParser.ExprTermContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExprTerm</c>
	/// labeled alternative in <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprTerm([NotNull] DiffGrammarParser.ExprTermContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TermFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermFactor([NotNull] DiffGrammarParser.TermFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TermFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermFactor([NotNull] DiffGrammarParser.TermFactorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TermDivFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermDivFactor([NotNull] DiffGrammarParser.TermDivFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TermDivFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermDivFactor([NotNull] DiffGrammarParser.TermDivFactorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TermTimesFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTermTimesFactor([NotNull] DiffGrammarParser.TermTimesFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TermTimesFactor</c>
	/// labeled alternative in <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTermTimesFactor([NotNull] DiffGrammarParser.TermTimesFactorContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FactAtom</c>
	/// labeled alternative in <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactAtom([NotNull] DiffGrammarParser.FactAtomContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FactAtom</c>
	/// labeled alternative in <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactAtom([NotNull] DiffGrammarParser.FactAtomContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FactPow</c>
	/// labeled alternative in <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactPow([NotNull] DiffGrammarParser.FactPowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FactPow</c>
	/// labeled alternative in <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactPow([NotNull] DiffGrammarParser.FactPowContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomVar</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomVar([NotNull] DiffGrammarParser.AtomVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomVar</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomVar([NotNull] DiffGrammarParser.AtomVarContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomConst</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomConst([NotNull] DiffGrammarParser.AtomConstContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomConst</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomConst([NotNull] DiffGrammarParser.AtomConstContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomNum</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomNum([NotNull] DiffGrammarParser.AtomNumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomNum</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomNum([NotNull] DiffGrammarParser.AtomNumContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomParenExpr</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomParenExpr([NotNull] DiffGrammarParser.AtomParenExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomParenExpr</c>
	/// labeled alternative in <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomParenExpr([NotNull] DiffGrammarParser.AtomParenExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] DiffGrammarParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiffGrammarParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] DiffGrammarParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] DiffGrammarParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiffGrammarParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] DiffGrammarParser.TermContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFactor([NotNull] DiffGrammarParser.FactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiffGrammarParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFactor([NotNull] DiffGrammarParser.FactorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] DiffGrammarParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiffGrammarParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] DiffGrammarParser.AtomContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConst([NotNull] DiffGrammarParser.ConstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiffGrammarParser.const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConst([NotNull] DiffGrammarParser.ConstContext context);
}
} // namespace SymbolicDifferentiation
